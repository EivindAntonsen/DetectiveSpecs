name: .Net

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x

      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v2.0.0

      - name: Configure github packages as nuget source
        run: dotnet nuget add source --username EivindAntonsen --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/EivindAntonsen/index.json"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish
        run: |
          $project = 'DetectiveSpecs/DetectiveSpecs.csproj'
          $outputDirectory = "${{ runner.workspace }}\Staging\Build"
          
          dotnet publish $project -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true --output $outputDirectory

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DetectiveSpecs
          path: ${{ runner.workspace }}/Staging/Build/

      - name: Create Github Release
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          $body = @{
            tag_name = "v1.0.0"
            target_commitish = "master"
            name = "v1.0.0"
            body = "Latest automated release of Detective Specs"
            draft = $false
            prerelease = $false
            generate_release_notes = $false
          } | ConvertTo-Json
          
          $uri = "https://api.github.com/repos/EivindAntonsen/DetectiveSpecs/releases"
          $accept = "application/vnd.github+json"

          Invoke-RestMethod -Uri $uri -Method Post -Headers @{"Accept" = $accept; "Authorization" = "Bearer $env:ACCESS_TOKEN"; "X-GitHub-Api-Version" = "2022-11-28"} -Body $body
        shell: pwsh

      - name: Upload Release Asset
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          Start-Sleep -Seconds 10
          
          $dirPath = "${{ runner.workspace }}/Staging/Build/"
          $zipFilePath = "${{ runner.workspace }}/Staging/Build.zip"
          
          If(Test-path $zipFilePath)
          {
            Remove-Item $zipFilePath
          }
          
          [System.IO.Compression.ZipFile]::CreateFromDirectory($dirPath, $zipFilePath)
          
          $releaseId = "1.0.0"
          $assetFileName = [System.IO.Path]::GetFileName($zipFilePath)
          $repo_full_name="EivindAntonsen/DetectiveSpecs"

          $uri = "https://uploads.github.com/repos/${repo_full_name}/releases/${releaseId}/assets?name=${assetFileName}"
          
          $headers = @{
                "Accept" = "application/vnd.github+json"
                "Authorization" = "Bearer $env:ACCESS_TOKEN"
                "X-GitHub-Api-Version" = "2022-11-28"
                "Content-Type" = "application/octet-stream"
            }

          $fileBytes = [System.IO.File]::ReadAllBytes($assetFilePath)

          Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body $fileBytes
        shell: pwsh